input {
	file {
		path => "/var/log/syslog"
		tags => ["syslog", "local", "rfc3164"]
	}

	udp {
		port => 5514
		codec => line { charset => "UTF-8" }
		tags => ["syslog", "remote", "rfc5424"]
	}

	tcp {
		port => 5514
		codec => line { charset => "UTF-8" }
		tags => ["syslog", "remote", "rfc5424"]
	}
}

filter {
	if "rfc3164" in [tags] {
		grok { match =>
			["message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}"]
		}
	}

	if "rfc5424" in [tags] {
		grok { match =>
			["message", "<%{NONNEGINT:syslog_pri}>%{NUMBER:syslog_version} %{TIMESTAMP_ISO8601:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{SYSLOGPROG:syslog_program} %{NONNEGINT:syslog_pid} %{PROG:syslog_msgid} %{GREEDYDATA:syslog_message}"]
		}
	}

	if "syslog" in [tags] {
		# unknown syslog format given, drop it
		if "rfc3164" not in [tags] and "rfc5424" not in [tags] { drop { } }

		# retreive the timestamp
		if "rfc3164" in [tags] { date { match => ["syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss"] } }
		if "rfc5424" in [tags] { date { match => ["syslog_timestamp", "ISO8601"] } }

		# drop all non collector messages
		if [syslog_program] !~ "cg-stat-collector(\.py)?" { drop { } }

		# convert syslog to json
		json { source => "syslog_message" }

		# remove unneeded data fields
		mutate { remove_field => [
			"message",
			"syslog_message",
			"syslog_severity",
			"syslog_severity_code",
			"syslog_facility",
			"syslog_facility_code",
			"syslog_pid",
			"syslog_msgid",
			"syslog_version",
			"syslog_timestamp",
			"syslog_hostname",
			"syslog_program",
			"syslog_pri",
			"program",
			"port",
			"@version"
		] }
	}
}

output {
	elasticsearch {
		hosts => ["http://localhost:9200"]
		index => "collector-%{+YYYY.MM.dd}"
	}
	
	# stdout { codec => json_lines }
}
